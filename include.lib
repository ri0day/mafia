usage() {
format_usage="Usage:
\t\t example:./mafia.sh -h \"10.0.7.1 10.0.7.2\" -f /tmp/da/passwd -c \"sort\" \n \
\t\t [-h host]\t remote nodes ip address or hostname \n \
\t\t [-f filename]\t specifed data file,the data will be split and send to nodes \n \
\t\t [-c command]\t specifed command will be send to nodes. "
echo -e $format_usage
}

local_check() {
if [ -z "$command" -o ! -f "$raw_data_file" ]
then
	echo "data file not found or command no specifed"
	exit
else
	:
fi
}


node_is_live() {
idx=0
declare -a nodes=($1)
for nd in ${nodes[@]}
do
        ((idx++))
if ping -c 1 -W 1 $nd 1>/dev/null 2>&1
        then
        echo
else
        echo "node: $nd conection fail,will be ignored"
        unset node_list[idx-1]
fi
done
}

check_environ_requirement() {
#remote file exist

client_idx=0
for client in ${node_list[@]}
do
        ((client_idx++))
        file_exist_and_executable=$(ssh $username@$client "[ -x "$node_hander_file" ]&&echo ok||echo fail")
        client_port_available=$(ssh $username@$client "if /bin/netstat -nalt|grep 1080[3-4] 1>/dev/null 2>&1;then echo unavailabe;else echo availabe;fi" )
        if [ "$file_exist_and_executable" == "ok" -a "$client_port_available" == "availabe" ]
        then
        :
        else
#       echo "$node_hander_file can't be executed or not found on node $client ,will be ignored"
        echo "$node_hander_file can't be executed or not found on node $client, or client port unavailabe."
        unset node_list[client_idx-1]
        fi
done
}

split_raw_file() {
cd $data_store_dir
line=$(wc -l $1)
pices=${#node_list[@]}
echo $pices
if [ $pices -eq 1 ]
then
        mv "$1"  $1"00"
else
        avg=$((${line%%/*}/$pices))
        if [ $(expr ${line%%/*} % $avg) -gt 0 ]
        then
        avg=$(($avg+1))
        else
        :
        fi
        split -d -l $avg $1 ${1%.*}
fi
}

start_nodes() {
if [ ${#node_list[@]} -eq 0 ];
then
echo "no available nodes."
exit
else
for node_idx  in `seq 0 $((${#node_list[@]}-1))`
do
        ssh  $username@${node_list[node_idx]} "sh /tmp/node.sh >/dev/null 2>&1 &"
done
fi

#wait nodes startup
sleep 2s
}

send_data_to_nodes() {
#send data to node
i=0
for file in $data_store_dir/*0*
do
        cat $file |$NC ${node_list[i++]} $data_recv_port
        echo "cat $file |$NC ${node_list[i++]} $data_recv_port"
done
}

send_commnad_to_nodes() {
#send command to data node
for node in ${node_list[@]}
do

        echo "$command"|$NC $node $command_recv_port
        echo "awk -F":" \'\$1 ~/root/{print \$0}\'|$NC $node $command_recv_port"
done
}
